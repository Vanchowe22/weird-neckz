{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u0435\\u043D \\u043F\\u043B\\u043E\\u0442\\\\nft-site(react-moralis)\\\\client\\\\src\\\\components\\\\CountdownTimer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getRemainingTimeUntilMsTimestamp } from '../Utils/CountdownTimerUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultRemainingTime = {\n  seconds: '00',\n  minutes: '00',\n  hours: '00',\n  days: '00'\n};\n\nconst CountdownTimer = _ref => {\n  _s();\n\n  let {\n    countdownTimestampMs,\n    didEnd,\n    isHowToJoin\n  } = _ref;\n  const [remainingTime, setRemainingTime] = useState(defaultRemainingTime);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateRemainingTime(countdownTimestampMs);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [countdownTimestampMs]);\n\n  function updateRemainingTime(countdown) {\n    setRemainingTime(getRemainingTimeUntilMsTimestamp(countdown, didEnd));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isHowToJoin ? 'how-to-timer' : '',\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: remainingTime.days\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"two-numbers\",\n      children: remainingTime.hours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"two-numbers\",\n      children: remainingTime.minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"two-numbers\",\n      children: remainingTime.seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountdownTimer, \"2iit0KZAxs3RAU3zsA1alDlabB0=\");\n\n_c = CountdownTimer;\nexport default CountdownTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Работен плот/nft-site(react-moralis)/client/src/components/CountdownTimer.js"],"names":["useState","useEffect","getRemainingTimeUntilMsTimestamp","defaultRemainingTime","seconds","minutes","hours","days","CountdownTimer","countdownTimestampMs","didEnd","isHowToJoin","remainingTime","setRemainingTime","intervalId","setInterval","updateRemainingTime","clearInterval","countdown"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,gCAAT,QAAiD,8BAAjD;;AAEA,MAAMC,oBAAoB,GAAG;AACzBC,EAAAA,OAAO,EAAE,IADgB;AAEzBC,EAAAA,OAAO,EAAE,IAFgB;AAGzBC,EAAAA,KAAK,EAAE,IAHkB;AAIzBC,EAAAA,IAAI,EAAE;AAJmB,CAA7B;;AAOA,MAAMC,cAAc,GAAG,QAAmD;AAAA;;AAAA,MAAlD;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA;AAAhC,GAAkD;AACtE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAACG,oBAAD,CAAlD;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,UAAU,GAAGC,WAAW,CAAC,MAAM;AACjCC,MAAAA,mBAAmB,CAACP,oBAAD,CAAnB;AACH,KAF6B,EAE3B,IAF2B,CAA9B;AAGA,WAAO,MAAMQ,aAAa,CAACH,UAAD,CAA1B;AACH,GALQ,EAKN,CAACL,oBAAD,CALM,CAAT;;AAOA,WAASO,mBAAT,CAA6BE,SAA7B,EAAwC;AACpCL,IAAAA,gBAAgB,CAACX,gCAAgC,CAACgB,SAAD,EAAYR,MAAZ,CAAjC,CAAhB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEC,WAAW,GAAC,cAAD,GAAiB,EAA5C;AAAA,4BACI;AAAA,gBAAOC,aAAa,CAACL;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,gBAA+BK,aAAa,CAACN;AAA7C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,gBAA+BM,aAAa,CAACP;AAA7C;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,gBAA+BO,aAAa,CAACR;AAA7C;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAxBD;;GAAMI,c;;KAAAA,c;AA0BN,eAAeA,cAAf","sourcesContent":["\r\nimport { useState, useEffect } from 'react';\r\nimport { getRemainingTimeUntilMsTimestamp } from '../Utils/CountdownTimerUtils';\r\n\r\nconst defaultRemainingTime = {\r\n    seconds: '00',\r\n    minutes: '00',\r\n    hours: '00',\r\n    days: '00'\r\n}\r\n\r\nconst CountdownTimer = ({ countdownTimestampMs, didEnd, isHowToJoin }) => {\r\n    const [remainingTime, setRemainingTime] = useState(defaultRemainingTime);\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            updateRemainingTime(countdownTimestampMs);\r\n        }, 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, [countdownTimestampMs]);\r\n\r\n    function updateRemainingTime(countdown) {\r\n        setRemainingTime(getRemainingTimeUntilMsTimestamp(countdown, didEnd));\r\n    }\r\n\r\n    return (\r\n        <div className={isHowToJoin?'how-to-timer': ''}>\r\n            <span>{remainingTime.days}</span>\r\n            <span>:</span>\r\n            <span className=\"two-numbers\">{remainingTime.hours}</span>\r\n            <span>:</span>\r\n            <span className=\"two-numbers\">{remainingTime.minutes}</span>\r\n            <span>:</span>\r\n            <span className=\"two-numbers\">{remainingTime.seconds}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CountdownTimer;"]},"metadata":{},"sourceType":"module"}