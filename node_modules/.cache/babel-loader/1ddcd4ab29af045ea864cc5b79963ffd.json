{"ast":null,"code":"import dayjs from 'dayjs';\nexport function getRemainingTimeUntilMsTimestamp(timestampMs, didEnd) {\n  const timestampDayjs = dayjs(timestampMs);\n  const nowDayjs = dayjs();\n\n  if (timestampDayjs.isBefore(nowDayjs)) {\n    didEnd();\n    return {\n      seconds: '00',\n      minutes: '00',\n      hours: '00',\n      days: '00'\n    };\n  }\n\n  return {\n    seconds: getRemainingSeconds(nowDayjs, timestampDayjs),\n    minutes: getRemainingMinutes(nowDayjs, timestampDayjs),\n    hours: getRemainingHours(nowDayjs, timestampDayjs),\n    days: getRemainingDays(nowDayjs, timestampDayjs)\n  };\n}\n\nfunction getRemainingSeconds(nowDayjs, timestampDayjs) {\n  const seconds = timestampDayjs.diff(nowDayjs, 'seconds') % 60;\n  return padWithZeros(seconds, 2);\n}\n\nfunction getRemainingMinutes(nowDayjs, timestampDayjs) {\n  const minutes = timestampDayjs.diff(nowDayjs, 'minutes') % 60;\n  return padWithZeros(minutes, 2);\n}\n\nfunction getRemainingHours(nowDayjs, timestampDayjs) {\n  const hours = timestampDayjs.diff(nowDayjs, 'hours') % 24;\n  return padWithZeros(hours, 2);\n}\n\nfunction getRemainingDays(nowDayjs, timestampDayjs) {\n  const days = timestampDayjs.diff(nowDayjs, 'days');\n  return days.toString();\n}\n\nfunction padWithZeros(number, minLength) {\n  const numberString = number.toString();\n  if (numberString.length >= minLength) return numberString;\n  return \"0\".repeat(minLength - numberString.length) + numberString;\n}","map":{"version":3,"sources":["C:/Users/User/OneDrive/Работен плот/nft-site(react-moralis)/client/src/Utils/CountdownTimerUtils.js"],"names":["dayjs","getRemainingTimeUntilMsTimestamp","timestampMs","didEnd","timestampDayjs","nowDayjs","isBefore","seconds","minutes","hours","days","getRemainingSeconds","getRemainingMinutes","getRemainingHours","getRemainingDays","diff","padWithZeros","toString","number","minLength","numberString","length","repeat"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,gCAAT,CAA0CC,WAA1C,EAAuDC,MAAvD,EAA+D;AAClE,QAAMC,cAAc,GAAGJ,KAAK,CAACE,WAAD,CAA5B;AACA,QAAMG,QAAQ,GAAGL,KAAK,EAAtB;;AACA,MAAII,cAAc,CAACE,QAAf,CAAwBD,QAAxB,CAAJ,EAAuC;AACnCF,IAAAA,MAAM;AACN,WAAO;AACHI,MAAAA,OAAO,EAAE,IADN;AAEHC,MAAAA,OAAO,EAAE,IAFN;AAGHC,MAAAA,KAAK,EAAE,IAHJ;AAIHC,MAAAA,IAAI,EAAE;AAJH,KAAP;AAMH;;AACD,SAAO;AACHH,IAAAA,OAAO,EAAEI,mBAAmB,CAACN,QAAD,EAAWD,cAAX,CADzB;AAEHI,IAAAA,OAAO,EAAEI,mBAAmB,CAACP,QAAD,EAAWD,cAAX,CAFzB;AAGHK,IAAAA,KAAK,EAAEI,iBAAiB,CAACR,QAAD,EAAWD,cAAX,CAHrB;AAIHM,IAAAA,IAAI,EAAEI,gBAAgB,CAACT,QAAD,EAAWD,cAAX;AAJnB,GAAP;AAMH;;AAED,SAASO,mBAAT,CAA6BN,QAA7B,EAAuCD,cAAvC,EAAuD;AACnD,QAAMG,OAAO,GAAGH,cAAc,CAACW,IAAf,CAAoBV,QAApB,EAA8B,SAA9B,IAA2C,EAA3D;AACA,SAAOW,YAAY,CAACT,OAAD,EAAU,CAAV,CAAnB;AACH;;AAED,SAASK,mBAAT,CAA6BP,QAA7B,EAAuCD,cAAvC,EAAuD;AACnD,QAAMI,OAAO,GAAGJ,cAAc,CAACW,IAAf,CAAoBV,QAApB,EAA8B,SAA9B,IAA2C,EAA3D;AACA,SAAOW,YAAY,CAACR,OAAD,EAAU,CAAV,CAAnB;AACH;;AAED,SAASK,iBAAT,CAA2BR,QAA3B,EAAqCD,cAArC,EAAqD;AACjD,QAAMK,KAAK,GAAGL,cAAc,CAACW,IAAf,CAAoBV,QAApB,EAA8B,OAA9B,IAAyC,EAAvD;AACA,SAAOW,YAAY,CAACP,KAAD,EAAQ,CAAR,CAAnB;AACH;;AAED,SAASK,gBAAT,CAA0BT,QAA1B,EAAoCD,cAApC,EAAoD;AAChD,QAAMM,IAAI,GAAGN,cAAc,CAACW,IAAf,CAAoBV,QAApB,EAA8B,MAA9B,CAAb;AACA,SAAOK,IAAI,CAACO,QAAL,EAAP;AACH;;AAED,SAASD,YAAT,CAAsBE,MAAtB,EAA8BC,SAA9B,EAAyC;AACrC,QAAMC,YAAY,GAAGF,MAAM,CAACD,QAAP,EAArB;AACA,MAAIG,YAAY,CAACC,MAAb,IAAuBF,SAA3B,EAAsC,OAAOC,YAAP;AACtC,SAAO,IAAIE,MAAJ,CAAWH,SAAS,GAAGC,YAAY,CAACC,MAApC,IAA8CD,YAArD;AACH","sourcesContent":["import dayjs from 'dayjs';\r\n\r\nexport function getRemainingTimeUntilMsTimestamp(timestampMs, didEnd) {\r\n    const timestampDayjs = dayjs(timestampMs);\r\n    const nowDayjs = dayjs();\r\n    if (timestampDayjs.isBefore(nowDayjs)) {\r\n        didEnd();\r\n        return {\r\n            seconds: '00',\r\n            minutes: '00',\r\n            hours: '00',\r\n            days: '00'\r\n        }\r\n    }\r\n    return {\r\n        seconds: getRemainingSeconds(nowDayjs, timestampDayjs),\r\n        minutes: getRemainingMinutes(nowDayjs, timestampDayjs),\r\n        hours: getRemainingHours(nowDayjs, timestampDayjs),\r\n        days: getRemainingDays(nowDayjs, timestampDayjs)\r\n    };\r\n}\r\n\r\nfunction getRemainingSeconds(nowDayjs, timestampDayjs) {\r\n    const seconds = timestampDayjs.diff(nowDayjs, 'seconds') % 60;\r\n    return padWithZeros(seconds, 2);\r\n}\r\n\r\nfunction getRemainingMinutes(nowDayjs, timestampDayjs) {\r\n    const minutes = timestampDayjs.diff(nowDayjs, 'minutes') % 60;\r\n    return padWithZeros(minutes, 2);\r\n}\r\n\r\nfunction getRemainingHours(nowDayjs, timestampDayjs) {\r\n    const hours = timestampDayjs.diff(nowDayjs, 'hours') % 24;\r\n    return padWithZeros(hours, 2);\r\n}\r\n\r\nfunction getRemainingDays(nowDayjs, timestampDayjs) {\r\n    const days = timestampDayjs.diff(nowDayjs, 'days');\r\n    return days.toString();\r\n}\r\n\r\nfunction padWithZeros(number, minLength) {\r\n    const numberString = number.toString();\r\n    if (numberString.length >= minLength) return numberString;\r\n    return \"0\".repeat(minLength - numberString.length) + numberString;\r\n}"]},"metadata":{},"sourceType":"module"}